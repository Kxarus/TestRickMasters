//
//  MessageService.swift
//  TestRickMasters
//
//  Created by Roman Kiruxin on 09.08.2023.
//

import Alamofire
import UIKit

public enum MessageService {
    public static func showError(_ method: String, _ error: Error) {
        let err = [
            "–ú–µ—Ç–æ–¥: \(method)",
            "–û—à–∏–±–∫–∞: \(error.localizedDescription)"
        ]

        debugMessage(title: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!", message: err.joined(separator: ", "))
    }

    static func showError(_ error: ApiErrorModel) {
        let err = [
            "–¢–∏–ø: \(error.type)",
            "–°—Ç–∞—Ç—É—Å –∫–æ–¥: \(error.code)",
            "–ó–∞–ø—Ä–æ—Å: \(error.request)",
            "–û–ø–∏—Å–∞–Ω–∏–µ: \(error.message)"
        ]

        debugMessage(title: "–û—à–∏–±–∫–∞ API –∑–∞–ø—Ä–æ—Å–∞!", message: err.joined(separator: ", "))
    }

    public static func showError(_ error: AFError) {
        let err = [
            "–°—Ç–∞—Ç—É—Å –∫–æ–¥: \(error.responseCode ?? -1)",
            "–ó–∞–ø—Ä–æ—Å: \(error.url?.absoluteString ?? "n/n")",
            "–û–ø–∏—Å–∞–Ω–∏–µ: \(error.localizedDescription)"
        ]

        debugMessage(title: "–û—à–∏–±–∫–∞ API –∑–∞–ø—Ä–æ—Å–∞!", message: err.joined(separator: ", "))
    }

    public static func showError(_ method: String, _ error: String) {
        let err = [
            "–ú–µ—Ç–æ–¥: \(method)",
            "–û—à–∏–±–∫–∞: \(error)"
        ]

        debugMessage(title: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!", message: err.joined(separator: ", "))
    }
}

private extension MessageService {
    static func debugMessage(title: String, message: String) {
        debugPrint("üò¢üò¢üò¢ –ß—Ç–æ —Ç–∞–∫–æ–µ? - \(title), \(message)")
    }
}
